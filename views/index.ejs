<!DOCTYPE html>
<html>

<head>
    <title> @ high game</title>
    <!-- <meta name='viewport' content="width=device-width, initial-scale=1" /> -->
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	<link rel="stylesheet" type="text/css" href="/css/manage.css">
	<link rel="stylesheet" type="text/css" href="/vendor/amcharts/plugins/export/export.css">
	<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.16/css/jquery.dataTables.css">
  
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
	<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.js"></script>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/amcharts/3.21.6/amcharts.js"></script>
	<script type="text/javascript" charset="utf8" src="/js/main.js"></script>
	<script type="text/javascript" charset="utf8" src="/vendor/amcharts/amcharts.js"></script>
	<script type="text/javascript" charset="utf8" src="/vendor/amcharts/serial.js"></script>
	<script type="text/javascript" charset="utf8" src="/vendor/amcharts/plugins/export/export.min.js"></script>

</head>

<body>
<div class="container-fluid">
	<div class="row">
		<div class="col-md-3">
			<div class="list-group list-plawin">
				<a class="list-group-item active" href="#">Current TIME ZONE 
				<button type="button" class="btn btn-default btn-sm pull-right" onclick="selectView('nonlive')">
	          <span class="glyphicon glyphicon-refresh"></span>
	        </button></a>

				<a class="list-group-item serch-league" href="#"> 
				<input id="date-time" type="date" style="width:100%;height:28px;"></a>
			</div>
		<!-- <input type="date" name="" id="date-time" class="form-control" value="today"> -->

		<!-- <div class="btn-group btn-phawin" role="group" aria-label="...">
			<button class="btn btn-default btn-phawin-group" type="button">Early</button>
			<button class="btn btn-default btn-phawin-group" onclick="selectView('nonlive')" type="button">Non-Live</button>
			<button class="btn btn-default btn-phawin-group" onclick="selectView('live')" type="button">Live</button>
		</div> -->

		<!-- input#date-time(type='date',style={'width': '100%','height':'28px;'},value=today) -->
		<h5 class="text-center">Select Team</h5>
			<!-- <div class="list-group list-scroll" id="count-leagues">
				
			</div> -->

			<table id="match-table"  class="table table-hover">
				<thead>
					<tr>
						<th>Team</th>
						<th>Time</th>
						<th>Count</th>
						<th>Value</th>
					</tr>
				</thead>
				<tbody id="count-leagues" class="table-scroll">
					<!-- <tr>
						<td></td>
					</tr> -->
				</tbody>
			</table>
		</div>
		<div class="col-md-9">
		<h3 id="text-team" class="pull-right"></h3>
		<div class="clearfix"></div>
		<div role="tabpanel">

			<!-- Nav tabs -->
			<ul class="nav nav-tabs" role="tablist">
				<li role="presentation" class="active">
					<a href="#graph" aria-controls="graph" role="tab" data-toggle="tab"> graph <span id="head-graph" class="badge"></span></a>
				</li>
				<li role="presentation">
					<a href="#hdp" aria-controls="hdp" role="tab" data-toggle="tab">hdp <span id="head-hdp" class="badge"></span></a>
				</li>
				<li role="presentation">
					<a href="#fhdp" aria-controls="fhdp" role="tab" data-toggle="tab">fhdp <span id="head-fhdp" class="badge"></span></a>
				</li>
				<li role="presentation">
					<a href="#goal" aria-controls="goal" role="tab" data-toggle="tab">goal <span id="head-goal" class="badge"></span></a>
				</li>
				<li role="presentation">
					<a href="#fgoal" aria-controls="fgoal" role="tab" data-toggle="tab">fgoal <span id="head-fgoal" class="badge"></span></a>
				</li>
				
			</ul>
		
			<!-- Tab panes -->
			<div class="tab-content">
				<div role="tabpanel" class="tab-pane" id="hdp">
					<table class="table table-bordered table-hover" id="table-hdp">
						<thead>
							<tr>
								<th>Time</th>
								<th>Duration</th>
								<th>Odds</th>
								<th>Odd-change</th>
								<th>Odd-change</th>
								<th>Value</th>
								<th> - </th>
							</tr>
						</thead>
						<tbody id="dutaion-hdp">
							
						</tbody>
					</table>
				</div>
				<div role="tabpanel" class="tab-pane" id="fhdp">
					<table class="table table-bordered table-hover" id="table-fhdp">
						<thead>
							<tr>
								<th>Time</th>
								<th>Duration</th>
								<th>Odds</th>
								<th>Odd-change</th>
								<th>Odd-change</th>
								<th>Value</th>
								<th> - </th>
							</tr>
						</thead>
						<tbody id="dutaion-fhdp">
							
						</tbody>
					</table>
				</div>
				<div role="tabpanel" class="tab-pane" id="goal">
					<table class="table table-bordered table-hover" id="table-goal">
						<thead>
							<tr>
								<th>Time</th>
								<th>Duration</th>
								<th>Odds</th>
								<th>Odd-change</th>
								<th>Odd-change</th>
								<th>Value</th>
								<th> - </th>
							</tr>
						</thead>
						<tbody id="dutaion-goal">
							
						</tbody>
					</table>
				</div>
				<div role="tabpanel" class="tab-pane" id="fgoal">
					<table class="table table-bordered table-hover" id="table-fgoal">
						<thead>
							<tr>
								<th>Time</th>
								<th>Duration</th>
								<th>Odds</th>
								<th>Odd-change</th>
								<th>Odd-change</th>
								<th>Value</th>
								<th> - </th>
							</tr>
						</thead>
						<tbody id="dutaion-fgoal">
							
						</tbody>
					</table>
				</div>
				<div role="tabpanel" class="tab-pane active" id="graph">
					<h5 id="title-team-fthdp"></h5>
					<div id="chartContainerHDP" class="grap-style"></div>
					<h5 id="title-team-hthdp"></h5>
					<div id="chartContainerFHDP" class="grap-style"></div>
					<h5 id="title-team-ftgoal"></h5>
					<div id="chartContainerGOAL" class="grap-style"></div>
					<h5 id="title-team-htgoal"></h5>
					<div id="chartContainerFGOAL" class="grap-style"></div>
				</div>
			</div>
		</div>

		</div>
	</div>
</div>
</body>
<script type="text/javascript">
	
	$(document).ready(function() {
		// $('#date-time').defaultValue	
		const set_time = new Date().toLocaleDateString()
		$('#date-time').val(set_time)
	});

	$('#date-time').change(function(event) {
		/* Act on the event */
		const $dateElement = $('#date-time');
  		const date = formatDate($dateElement.val());
  		selectView('nonlive')
	});

	function formatDate(date = null) {
		const d = new Date(date);
		const year = `${d.getFullYear()}`;
		let month = `${(d.getMonth() + 1)}`;
		let day = `${d.getDate()}`;

		if (month.length < 2) month = `0${month}`;
		if (day.length < 2) day = `0${day}`;

		return [year, month, day].join('-');
	}

	function selectView(view = 'nonlive') {
		const $dateElement = $('#date-time');
		const $numLeagues = $('#count-leagues');
		const date = formatDate($dateElement.val());
		const sort_team = {}; 
		  $.post(`/matchesDetail/${date}/${view}`)
		  .done( function(data) {
		    const team = data;
		    const $leaguesElement = $('#count-leagues');
		    let $newLeagueElement = '';
		    const arr = [];
		    for(const index in team) {
		    	// console.log(team[index].hdp);
		    	const num =  team[index].hdp.length + team[index].fhdp.length + team[index].goal.length + team[index].fgoal.length;
		    	const time = new Date(team[index].nonlive.time)
		    	let valueGraph = '';
				const awayColor = team[index].awayColor;
		    	const homeColor = team[index].homeColor;
		    	if (awayColor === 'blue' && homeColor === 'blue') {
			      valueGraph = 'home';
			    } else if (awayColor === 'red') {
			      valueGraph = 'away';
			    } else if (homeColor === 'red') {
			      valueGraph = 'home';
			    }
		    	const val_change =  geneGraphEach_noti(team[index].hdp, 'hdp', 'FT-HDP', valueGraph, 'chartContainerHDP');
		    	$newLeagueElement += `<tr onclick="getmatches('${team[index]._id}')">`;
		    	$newLeagueElement += `<td>${ team[index].home} - ${team[index].away }</td>`;
		    	$newLeagueElement += `<td>${ team[index].nonlive.time }</td>`;
		    	$newLeagueElement += `<td>${ num }</td>`;
		    	$newLeagueElement += `<td>${ team[index].hdp.length > 0 ? val_change[team[index].hdp.length - 1 ]['values']:'0' }</td>`;
		    	$newLeagueElement += `</tr>`;
		    }
		  
			dataTableDestroy('#match-table')
		    $numLeagues.html(`Leagues (${team.length})`)
		    $leaguesElement.html($newLeagueElement);
		   	setDatatable('#match-table')
		  });
	}

function geneGraphEach_noti(data, filter, type, value, containername) {
  const chartdata = [];
  const obj = data;
  const guideOdd = {};
  let changeValue = true;
  let newValueOddChange = 0;
  let newValue = 0;
  let countReplaceHDP = 0;
  const arrChangeval = [];
  arrChangeval.hdp =[];

  for (let index in obj) {
    const newDate = new Date(obj[index].time);
    console.log(index + '='+ obj[index][value] + ':'+obj.length)

    if (obj[index][filter].length > 1) {
      // console.log(obj[index][filter]+'kuy')
      if ((!guideOdd[obj[index][filter]]) || (obj[index][filter] != obj[index-1][filter])) {
        defaultValue[filter] = parseFloat(obj[index][value]);
        newValueOddChange = newValue;
      }
    }

    if (parseFloat(obj[index][value]) > 0 && defaultValue[filter] > 0) {
      newValue = parseFloat(obj[index][value]) - defaultValue[filter];
    } else if (parseFloat(obj[index][value]) < 0 && defaultValue[filter] < 0) {
      newValue = parseFloat(obj[index][value]) - defaultValue[filter];
    } else if (parseFloat(obj[index][value]) === -1 && defaultValue[filter] === 1) {
      newValue = 0;
    } else if (parseFloat(obj[index][value]) === 1 && defaultValue[filter] === -1) {
      newValue = 0;
    } else if (parseFloat(obj[index][value]) > 0 && defaultValue[filter] < 0) {
      newValue = (1 - Math.abs(defaultValue[filter])) + (1 - Math.abs(parseFloat(obj[index][value])));
      newValue *= -1;
    } else if (parseFloat(obj[index][value]) < 0 && defaultValue[filter] > 0) {
      newValue = (1 - Math.abs(defaultValue[filter])) + (1 - Math.abs(parseFloat(obj[index][value])));
    } else if (defaultValue[filter] === 1 && parseFloat(obj[index][value]) < 0) {
      newValue = 1 + parseFloat(obj[index][value]);
    } else if (defaultValue[filter] === 1 && parseFloat(obj[index][value]) > 0) {
      newValue = parseFloat(obj[index][value]) - 1;
    }
    newValue += newValueOddChange;
    if (obj[index][filter].length > 1 ) {
      if(!guideOdd[obj[index][filter]]){
        guideOdd[obj[index][filter]] = addGuideEach(type, newDate, obj[index][filter]);
      } else if(obj[index][filter] != obj[index-1][filter]) {
        guideOdd[`${obj[index][filter]}-${countReplaceHDP}`] = addGuideEach(type, newDate, obj[index][filter]);
        countReplaceHDP++;
      }
    }

    if (obj[index].score !== '' && !guideScore[obj[index].score] && filter === 'hdp') {
      guideScore[obj[index].score] = addGuideScoreEach('Score', newDate, obj[index].score);
    }

    if (chartValue[filter] == null) {
      chartdata.push({
        date: formatDateTime(newDate),
        values: newValue.toFixed(2),
        odds: isNaN(parseFloat(obj[index][value])) ? 0.00 : parseFloat(obj[index][value]),
      });
      arrChangeval[filter].push(newDate.toLocaleString());

    } else if ($.inArray(newDate.toLocaleString(), arrChangeval[filter]) > -1) {
      changeValue = false;      
      continue;
    } else {
      arrChangeval[filter].push(newDate.toLocaleString());
      chartValue[filter].dataProvider.push({
        date: formatDateTime(newDate),
        values: newValue.toFixed(3),
        odds: isNaN(parseFloat(obj[index][value])) ? 0.00 : parseFloat(obj[index][value]),
      });
      chartValue[filter].validateData();

      for (let i in guideOdd) {
        if (i === 0)
          chartValue[filter].categoryAxis.addGuide(guideOdd[i]);
      }

      for (let i in guideScore) {
        if (i === 0)
          chartValue[filter].categoryAxis.addGuide(guideScore[i]);
      }

      chartValue[filter].validateNow();
    }
  }

// console.log(chartdata)
  if (changeValue) {
    return chartdata;
  }
}

function setDatatable(element) {
	$(`${element}`).DataTable({
    	destroy: true,
		order: [ 2, "desc" ],
    	scrollY: 500,
		paging: false
    })
}

function dataTableDestroy(element) {
	$(`${element}`).dataTable().fnDestroy();
}

function setDatatableNonscroll(element) {
	$(`${element}`).DataTable({
    	destroy: true,
		paging: false
    })
}

function getmatches(match_id) {
	const hmColor = [];
		selectDetailMatch(match_id,'nonlive');
}
	
</script>
</html>